---
description: 
globs: 
alwaysApply: false
---
# Java 学习项目结构指南

## 项目概述
这是一个用于学习 Java 核心概念的项目，使用 Maven 进行依赖管理和构建。项目使用 Java 20 版本，并包含 JUnit 5 用于单元测试。

## 目录结构
- `src/main/java/com/example/`: 主要源代码目录
  - `basics/`: Java 基础概念示例
  - `oop/`: 面向对象编程示例
  - `exception/`: 异常处理示例
  - `collection/`: 集合框架示例
  - `java8/`: Java 8 新特性示例
  - `io/`: 输入输出流示例
  - `thread/`: 多线程编程示例
  - `network/`: 网络编程示例
  - `reflection/`: 反射机制示例

## 开发计划
1. 基础概念完善
   - 完善 `basics` 包中的基础语法示例
   - 添加更多注释和文档说明

2. 面向对象编程
   - 在 `oop` 包中实现继承、多态、封装等示例
   - 添加设计模式示例

3. 异常处理
   - 完善 `exception` 包中的异常处理示例
   - 添加自定义异常示例

4. 集合框架
   - 在 `collection` 包中实现各种集合类的使用示例
   - 添加集合性能对比示例

5. Java 8 特性
   - 在 `java8` 包中实现 Lambda 表达式示例
   - 添加 Stream API 使用示例
   - 实现 Optional 类使用示例

6. IO 操作
   - 在 `io` 包中实现文件读写示例
   - 添加 NIO 示例

7. 多线程编程
   - 在 `thread` 包中实现线程创建和管理示例
   - 添加线程同步和通信示例
   - 实现线程池使用示例

8. 网络编程
   - 在 `network` 包中实现 Socket 编程示例
   - 添加 HTTP 客户端示例

9. 反射机制
   - 在 `reflection` 包中实现类反射示例
   - 添加动态代理示例

## 代码规范
1. 每个示例类都应该包含详细的注释说明
2. 使用有意义的类名和方法名
3. 遵循 Java 编码规范
4. 为每个示例添加单元测试

## 文档要求
1. 每个包都应该包含 README.md 文件
2. 示例代码需要包含详细的注释
3. 重要概念需要添加文档说明

## 测试要求
1. 使用 JUnit 5 编写单元测试
2. 测试覆盖率要求达到 80% 以上
3. 每个示例都应该有对应的测试用例

